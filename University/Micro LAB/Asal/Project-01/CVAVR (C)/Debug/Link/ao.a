;/*
; * ao.c
; *
; * Created: 2024-01-17 05:21:36 PM
; * Author: Asal Omrani
; */
;
;#include <io.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <mega16.h>
;#include <delay.h>
;
;#define ON 1
;#define OFF 0
;#define RED PORTC .0
;#define YELLOW PORTC .1
;#define GREEN PORTC .2
;#define speaker PORTC .6
;#define monitor PORTD
;
;void buzzer()
; 0000 0015 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0016     speaker = ON;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0017     delay_ms(1000);
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0018     speaker = OFF;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0019 }
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;
;void show8()
; 0000 001C {
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 001D     monitor = 0x7F;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 001E     // buzzer(); //
; 0000 001F     monitor = 0x07;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0020     delay_ms(1000);
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0021     monitor = 0x7D;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0022     delay_ms(1000);
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0023     monitor = 0x6D;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0024     delay_ms(1000);
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0025     monitor = 0x66;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0026     delay_ms(1000);
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0027     monitor = 0x4F;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0028     delay_ms(1000);
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0029     monitor = 0x5B;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 002A     delay_ms(1000);
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 002B     monitor = 0x06;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 002C     delay_ms(1000);
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 002D     monitor = 0;    //
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 002E }
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;
;void show5()
; 0000 0031 {
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0032     monitor = 0x6D;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0033     // buzzer(); //
; 0000 0034     monitor = 0x66;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0035     delay_ms(1000);
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0036     monitor = 0x4F;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0037     delay_ms(1000);
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0038     monitor = 0x5B;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0039     delay_ms(1000);
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 003A     monitor = 0x06;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 003B     delay_ms(1000);
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 003C     // monitor = 0;    //
; 0000 003D }
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;
;void red()
; 0000 0040 {
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0041     RED = ON;
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0042     buzzer(); //
;PCODE: $00000055 VOL: 0
; 0000 0043     show8();
;PCODE: $00000056 VOL: 0
; 0000 0044     RED = OFF;
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 0045 }
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;
;void yellow()
; 0000 0048 {
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0049     YELLOW = ON;
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 004A     delay_ms(2000);
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 004B     YELLOW = OFF;
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 004C }
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;
;void green()
; 0000 004F {
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 0050     GREEN = ON;
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 0051     buzzer(); //
;PCODE: $00000069 VOL: 0
; 0000 0052     show5();
;PCODE: $0000006A VOL: 0
; 0000 0053     GREEN = OFF;
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 0054 }
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;
;void main()
; 0000 0057 {
;PCODE: $0000006F VOL: 0
; 0000 0058     DDRD = 0xFF, DDRC = 0xFF;
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 0059 
; 0000 005A     while (1)
;PCODE: $00000074 VOL: 0
; 0000 005B     {
; 0000 005C         red();
;PCODE: $00000075 VOL: 0
; 0000 005D 
; 0000 005E         yellow();
;PCODE: $00000076 VOL: 0
; 0000 005F 
; 0000 0060         green();
;PCODE: $00000077 VOL: 0
; 0000 0061 
; 0000 0062         yellow();
;PCODE: $00000078 VOL: 0
; 0000 0063     }
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 0064 }
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
